-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local rootPart = Character:WaitForChild("HumanoidRootPart")

-- Configurations for auto parry
local auto_parry_enabled = false
local parry_distance = 10
local parry_delay = 0.5
local parry_duration = 1
local cooldown = false
local spam_speed = 0.1

-- Function to detect enemies within range
local function detectEnemies()
    local enemies = {}
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:IsA("Model") and obj:FindFirstChild("HumanoidRootPart") then
            local distance = (obj.HumanoidRootPart.Position - rootPart.Position).Magnitude
            if distance <= parry_distance then
                table.insert(enemies, obj)
            end
        end
    end
    return enemies
end

-- Function to perform parry
local function performParry()
    if cooldown then return end
    cooldown = true
    local humanoid = Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local parryAnimation = Instance.new("Animation")
        parryAnimation.AnimationId = "rbxassetid://1234567890" -- Replace with actual animation ID
        local animTrack = humanoid:LoadAnimation(parryAnimation)
        animTrack:Play()
        task.wait(parry_duration)
        animTrack:Stop()
        cooldown = false
    end
end

-- Function to enable auto parry
local function autoParry()
    while auto_parry_enabled do
        local enemies = detectEnemies()
        if #enemies > 0 then
            performParry()
        end
        task.wait(parry_delay)
    end
end

-- UI and interface with Rayfield UI Library
local success, Library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))() -- Replace with your library link
end)

if not success then
    warn("Error loading Rayfield UI Library: " .. tostring(Library))
    return
else
    print("Rayfield UI Library loaded successfully")
end

local Window = Library:CreateWindow({
    Name = "Blade Ball Auto-Parry",
    Theme = Library.Themes.Dark,
    SaveConfig = true,
    ConfigFolder = "BladeBallConfig"
})

local MainTab = Window:CreateTab("Main")
local MainSection = MainTab:CreateSection("Auto-Parry")

MainSection:CreateToggle({
    Name = "Enable Auto-Parry",
    Callback = function(state)
        auto_parry_enabled = state
        if auto_parry_enabled then
            task.spawn(autoParry)
        end
    end
})

MainSection:CreateSlider({
    Name = "Parry Distance",
    Range = {1, 20},
    Increment = 1,
    Suffix = "units",
    CurrentValue = 10,
    Callback = function(value)
        parry_distance = value
    end
})

MainSection:CreateSlider({
    Name = "Parry Delay",
    Range = {0.1, 2},
    Increment = 0.1,
    Suffix = "seconds",
    CurrentValue = 0.5,
    Callback = function(value)
        parry_delay = value
    end
})

MainSection:CreateSlider({
    Name = "Spam Speed",
    Range = {0.1, 1},
    Increment = 0.1,
    Suffix = "seconds",
    CurrentValue = 0.1,
    Callback = function(value)
        spam_speed = value
    end
})

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Blade Ball Auto-Parry Loaded",
    Text = "Customize your settings in the Rayfield UI!",
    Duration = 5
})
