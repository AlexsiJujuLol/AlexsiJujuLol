-- Load the Library
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/LuauCloud/Byte/refs/heads/main/Utils/Library.lua'))()

-- Create a Window
local Library_Window = Library.Add_Window('ikorz')

-- Create a Tab for "ikorz"
local Ikorz_Tab = Library_Window.Create_Tab({
    name = 'ikorz',
    icon = 'rbxassetid://'
})

-- Create a Section inside the Ikorz Tab
local Ikorz_Section = Ikorz_Tab.Create_Section()

-- Auto Parry Dropdown Toggle
local Auto_Parry = Ikorz_Section.Create_DropToggle({
    name = 'Auto Parry',
    section = 'left',
    flag = 'Auto_Parry',
    options = {'Custom', 'Random', 'Backwards'},
    callback = function(state)
        if state then
            print('Auto Parry: Enabled')
        else
            print('Auto Parry: Disabled')
        end
    end,
    callback2 = function(selected)
        print('Auto Parry Selected:', selected)
    end
})

-- Arsenal Tab with Aimbot and Silent Aimbot
local Arsenal_Tab = Library_Window.Create_Tab({
    name = 'Arsenal',
    icon = 'rbxassetid://'
})

local Arsenal_Section = Arsenal_Tab.Create_Section()

-- Aimbot Toggle (for targeting closest player)
local Aimbot = Arsenal_Section.Create_Toggle({
    name = 'Aimbot',
    flag = 'Aimbot',
    callback = function(state)
        if state then
            print('Aimbot: Activated')
            -- Implement aimbot logic here
            local player = game.Players.LocalPlayer
            local mouse = player:GetMouse()
            local closestPlayer = nil
            local closestDistance = math.huge

            -- Loop through all players to find the closest target
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer.Character and targetPlayer ~= player then
                    local target = targetPlayer.Character:FindFirstChild('HumanoidRootPart')
                    if target then
                        local distance = (target.Position - mouse.Hit.p).Magnitude
                        if distance < closestDistance then
                            closestDistance = distance
                            closestPlayer = target
                        end
                    end
                end
            end

            -- Aim at closest player
            if closestPlayer then
                local targetPosition = closestPlayer.Position
                -- Simulate an aim at the target position
                -- Adjust camera or view here for mobile aiming
            end
        else
            print('Aimbot: Deactivated')
        end
    end
})

-- Silent Aimbot (smoother aim with no visual snapping)
local Silent_Aimbot = Arsenal_Section.Create_Toggle({
    name = 'Silent Aimbot',
    flag = 'Silent_Aimbot',
    callback = function(state)
        if state then
            print('Silent Aimbot: Activated')
            -- Implement silent aimbot logic here
            local player = game.Players.LocalPlayer
            local mouse = player:GetMouse()
            local closestPlayer = nil
            local closestDistance = math.huge

            -- Loop through all players to find the closest target
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer.Character and targetPlayer ~= player then
                    local target = targetPlayer.Character:FindFirstChild('HumanoidRootPart')
                    if target then
                        local distance = (target.Position - mouse.Hit.p).Magnitude
                        if distance < closestDistance then
                            closestDistance = distance
                            closestPlayer = target
                        end
                    end
                end
            end

            -- Aim silently at closest player (without visible snapping)
            if closestPlayer then
                local targetPosition = closestPlayer.Position
                -- Smoothly aim at targetPosition without visual snapping
                -- Mobile will have its own input system, so you'd simulate a smooth transition of aim position
            end
        else
            print('Silent Aimbot: Deactivated')
        end
    end
})

-- Triggerbot
local Triggerbot = Arsenal_Section.Create_Toggle({
    name = 'Triggerbot',
    flag = 'Triggerbot',
    callback = function(state)
        if state then
            print('Triggerbot activated')
            -- Implement triggerbot logic here
        else
            print('Triggerbot deactivated')
        end
    end
})

-- Wallhack
local Wallhack = Arsenal_Section.Create_Toggle({
    name = 'Wallhack',
    flag = 'Wallhack',
    callback = function(state)
        if state then
            print('Wallhack enabled')
            -- Implement wallhack logic here
        else
            print('Wallhack disabled')
        end
    end
})

-- ESP (Extra Sensory Perception)
local ESP = Arsenal_Section.Create_Toggle({
    name = 'ESP',
    flag = 'ESP',
    callback = function(state)
        if state then
            print('ESP enabled')
            -- Implement ESP logic here
        else
            print('ESP disabled')
        end
    end
})

-- Helper function to simulate smooth aiming for mobile
local function SmoothAim(targetPosition)
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    
    -- You can adjust the speed of aim transition here
    local speed = 10
    local direction = (targetPosition - mouse.Hit.p).unit
    local newPosition = mouse.Hit.p + direction * speed

    -- Move camera smoothly towards the new position
    -- Here you would apply a tween or a gradual camera transition
end
