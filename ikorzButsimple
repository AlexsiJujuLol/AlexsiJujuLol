local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer

-- Auto Parry configuration
local AutoParryEnabled = false  -- Default state for Auto Parry
local ReactionTime = 0.2       -- Faster reaction time for close-range combat
local DetectionRange = 50      -- Shorter detection range for close-range
local Cooldown = tick()
local Parried = false

-- Load Byte library for UI (Make sure this URL is valid)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/LuauCloud/Byte/refs/heads/main/Utils/Library.lua"))()

-- Create UI Window and Tabs
local Window = Library.Add_Window("Auto Parry")
local MainTab = Window.Create_Tab({ name = "Main" })
local SettingsTab = Window.Create_Tab({ name = "Settings" })

-- Add Section for Auto Parry Toggle
local MainSection = MainTab.Create_Section({ name = "Features" })
local AutoParryToggle = MainSection.Create_Toggle({
    name = "Enable Auto Parry",
    section = "left",
    default = false,
    callback = function(state)
        AutoParryEnabled = state  -- Update the Auto Parry state when the toggle is changed
        if AutoParryEnabled then
            print("Auto Parry Enabled")
        else
            print("Auto Parry Disabled")
        end
    end,
})

-- Ball Detection Function
local function GetClosestBall()
    local closestBall, closestDistance = nil, math.huge
    for _, Ball in ipairs(workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if HRP then
                local Distance = (HRP.Position - Ball.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestBall = Ball
                end
            end
        end
    end
    return closestBall
end

-- Auto Parry Logic with Close Range Settings
RunService.Heartbeat:Connect(function()
    if not AutoParryEnabled then return end  -- If Auto Parry is not enabled, stop the function

    -- Use the close-range settings
    ReactionTime = 0.2  -- Faster reaction time for close-range
    DetectionRange = 50  -- Close range detection for better reaction times

    local Ball = GetClosestBall()
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Ball or not HRP then return end  -- If there is no ball or HumanoidRootPart, return

    local BallVelocity = Ball.Velocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude
    local TimeToReach = Distance / BallVelocity

    -- Auto Parry: If the ball is within range and reaches the player in time, simulate a parry
    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance <= DetectionRange and TimeToReach <= ReactionTime then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)  -- Simulate mouse button press (parry action)
        Parried = true
        Cooldown = tick()
    end

    -- Reset parry status after cooldown
    if (tick() - Cooldown) >= 0.2 then
        Parried = false
    end
end)

-- Notify the User
Library.Notify({
    Title = "Auto Parry",
    Content = "UI Loaded. Toggle Auto Parry to enable/disable.",
    Duration = 5,
})
