local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/LuauCloud/Byte/refs/heads/main/Utils/Library.lua'))()

local Library_Window = Library.Add_Window('Acceptions')

-- Create Main Tab
local Main_Tab = Library_Window.Create_Tab({
    name = 'Main',
    icon = 'rbxassetid://'
})

-- Create Main Section
local Main_Section = Main_Tab.Create_Section()

-- Variables for Auto Parry Logic
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer

local AutoParryEnabled = false
local ReactionTime = 0.3
local DetectionRange = 100
local Cooldown = tick()
local Parried = false

-- Function to Find Closest Ball
local function GetClosestBall()
    local closestBall, closestDistance = nil, math.huge
    for _, Ball in ipairs(workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if HRP then
                local Distance = (HRP.Position - Ball.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestBall = Ball
                end
            end
        end
    end
    return closestBall
end

-- Auto Parry Toggle in UI
local Auto_Parry = Main_Section.Create_Toggle({
    name = 'Auto Parry',
    section = 'left',
    flag = 'Auto_Parry',
    callback = function(state)
        AutoParryEnabled = state
        print('Auto Parry Enabled:', AutoParryEnabled)
    end
})

-- Auto Parry Logic
RunService.Heartbeat:Connect(function()
    if not AutoParryEnabled then return end

    local Ball = GetClosestBall()
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Ball or not HRP then return end

    local BallVelocity = Ball.Velocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude
    local TimeToReach = Distance / BallVelocity

    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance <= DetectionRange and TimeToReach <= ReactionTime then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        Parried = true
        Cooldown = tick()
    end

    if (tick() - Cooldown) >= 0.2 then
        Parried = false
    end
end)
