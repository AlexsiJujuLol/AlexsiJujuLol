local ikorz = loadstring(game:HttpGet("https://[Log in to view URL]"))()
local SaveManager = loadstring(game:HttpGet("https://[Log in to view URL]"))()
local InterfaceManager = loadstring(game:HttpGet("https://[Log in to view URL]"))()

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Player = Players.LocalPlayer

local AutoParryEnabled = true
local VisualEnabled = true
local ReactionTime = 0.35
local DetectionRange = 50
local CooldownTime = 0.15
local Parried = false
local LastParryTime = 0

local ParryRing = Drawing.new("Circle")
ParryRing.Visible = false
ParryRing.Color = Color3.fromRGB(255, 0, 0)
ParryRing.Transparency = 0.5
ParryRing.Thickness = 2
ParryRing.Filled = false

local function GetClosestBall()
    local closestBall, closestDistance = nil, math.huge
    for _, Ball in ipairs(workspace.Balls:GetChildren()) do
        if Ball:GetAttribute("realBall") then
            local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if HRP then
                local Distance = (HRP.Position - Ball.Position).Magnitude
                if Distance < closestDistance then
                    closestDistance = Distance
                    closestBall = Ball
                end
            end
        end
    end
    return closestBall
end

RunService.Heartbeat:Connect(function()
    if not AutoParryEnabled and not VisualEnabled then
        ParryRing.Visible = false
        return
    end

    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not HRP then
        ParryRing.Visible = false
        return
    end

    local Ball = GetClosestBall()
    if not Ball then
        return
    end

    local BallVelocity = Ball.Velocity.Magnitude
    local Distance = (HRP.Position - Ball.Position).Magnitude
    local TimeToReach = Distance / BallVelocity

    local ScreenPosition, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(HRP.Position)
    ParryRing.Position = Vector2.new(ScreenPosition.X, ScreenPosition.Y)
    ParryRing.Radius = math.min(DetectionRange, Distance)
    ParryRing.Visible = VisualEnabled and OnScreen

    local AdaptiveReactionTime = ReactionTime + math.clamp((BallVelocity / 100), 0, 0.1)

    if Ball:GetAttribute("target") == Player.Name and not Parried and Distance <= DetectionRange and TimeToReach <= AdaptiveReactionTime then
        if AutoParryEnabled and (tick() - LastParryTime) >= CooldownTime then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            Parried = true
            LastParryTime = tick()
        end
    end

    if (tick() - LastParryTime) >= CooldownTime then
        Parried = false
    end
end)

local Window = ikorz:CreateWindow({
    Title = "ikorz " .. ikorz.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local ToggleAutoParry = Tabs.Main:AddToggle("AutoParryToggle", {
    Title = "Toggle Auto Parry",
    Default = true
})

ToggleAutoParry:OnChanged(function()
    AutoParryEnabled = ToggleAutoParry.Value
    print("Auto Parry:", AutoParryEnabled and "Enabled" or "Disabled")
end)

local ToggleVisual = Tabs.Main:AddToggle("VisualToggle", {
    Title = "Toggle Visual",
    Default = true
})

ToggleVisual:OnChanged(function()
    VisualEnabled = ToggleVisual.Value
    print("Visual:", VisualEnabled and "Enabled" or "Disabled")
end)

local SaveManager = loadstring(game:HttpGet("https://[Log in to view URL]"))()
SaveManager:SetLibrary(ikorz)
SaveManager:IgnoreThemeSettings()
SaveManager:BuildConfigSection(Tabs.Settings)

ikorz:Notify({
    Title = "ikorz",
    Content = "Script Loaded Successfully!",
    Duration = 8
})