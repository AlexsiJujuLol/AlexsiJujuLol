local UI_Lib = {}

UI_Lib["ScreenGui"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI_Lib["ScreenGui"].Name = "Ikorz_UI"
UI_Lib["ScreenGui"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UI_Lib["ScreenGui"].ResetOnSpawn = false

local correctKey = "Ikorz"
local keyEntered = false

-- UI Frame Setup
local keyFrame = Instance.new("Frame", UI_Lib["ScreenGui"])
keyFrame.Size = UDim2.new(0, 300, 0, 150)
keyFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
keyFrame.BackgroundColor3 = Color3.fromRGB(30, 28, 40)
keyFrame.BackgroundTransparency = 0.3 -- Transparency Adjusted
keyFrame.Name = "KeyFrame"
local keyFrameCorner = Instance.new("UICorner", keyFrame)
keyFrameCorner.CornerRadius = UDim.new(0, 20)

local keyTitle = Instance.new("TextLabel", keyFrame)
keyTitle.Text = "Enter Key"
keyTitle.Font = Enum.Font.GothamBold
keyTitle.TextSize = 20
keyTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
keyTitle.BackgroundTransparency = 1
keyTitle.Size = UDim2.new(1, 0, 0, 30)
keyTitle.Position = UDim2.new(0, 0, 0, 10)

local keyInput = Instance.new("TextBox", keyFrame)
keyInput.Size = UDim2.new(0, 260, 0, 40)
keyInput.Position = UDim2.new(0.5, -130, 0, 50)
keyInput.PlaceholderText = "Enter Key Here"
keyInput.Font = Enum.Font.Gotham
keyInput.TextSize = 18
keyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
keyInput.BackgroundColor3 = Color3.fromRGB(40, 38, 50)
local keyInputCorner = Instance.new("UICorner", keyInput)
keyInputCorner.CornerRadius = UDim.new(0, 10)

local submitButton = Instance.new("TextButton", keyFrame)
submitButton.Text = "Submit"
submitButton.Size = UDim2.new(0, 100, 0, 40)
submitButton.Position = UDim2.new(0.5, -50, 0, 100)
submitButton.Font = Enum.Font.Gotham
submitButton.TextSize = 18
submitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
submitButton.BackgroundColor3 = Color3.fromRGB(30, 28, 40)
local submitButtonCorner = Instance.new("UICorner", submitButton)
submitButtonCorner.CornerRadius = UDim.new(0, 10)

submitButton.MouseButton1Click:Connect(function()
    if keyInput.Text == correctKey then
        keyEntered = true
        keyFrame:Destroy()
        UI_Lib["MainFrame"].Visible = true
    else
        keyInput.Text = ""
        keyInput.PlaceholderText = "Invalid Key!"
    end
end)

-- Main UI Frame
UI_Lib["MainFrame"] = Instance.new("Frame", UI_Lib["ScreenGui"])
UI_Lib["MainFrame"].Size = UDim2.new(0, 400, 0, 400)
UI_Lib["MainFrame"].Position = UDim2.new(0.5, -200, 0.5, -200)
UI_Lib["MainFrame"].BackgroundColor3 = Color3.fromRGB(30, 28, 40)
UI_Lib["MainFrame"].Visible = false
UI_Lib["MainFrame"].BackgroundTransparency = 0.4 -- Transparency Adjusted
local mainFrameCorner = Instance.new("UICorner", UI_Lib["MainFrame"])
mainFrameCorner.CornerRadius = UDim.new(0, 20)

local titleLabel = Instance.new("TextLabel", UI_Lib["MainFrame"])
titleLabel.Text = "Ikorz UI"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 26
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 10)

-- ESP Box Toggle
local espToggle = Instance.new("TextButton", UI_Lib["MainFrame"])
espToggle.Text = "ESP Box: OFF"
espToggle.Size = UDim2.new(0, 200, 0, 40)
espToggle.Position = UDim2.new(0.5, -100, 0, 60)
espToggle.Font = Enum.Font.Gotham
espToggle.TextSize = 18
espToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
espToggle.BackgroundColor3 = Color3.fromRGB(30, 28, 40)
local espToggleCorner = Instance.new("UICorner", espToggle)
espToggleCorner.CornerRadius = UDim.new(0, 10)

local espEnabled = false

espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espToggle.Text = espEnabled and "ESP Box: ON" or "ESP Box: OFF"
    if espEnabled then
        for _, plr in pairs(game:GetService("Players"):GetPlayers()) do
            if plr ~= game:GetService("Players").LocalPlayer and plr.Team ~= game:GetService("Players").LocalPlayer.Team then
                local char = plr.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    local espBox = Instance.new("BoxHandleAdornment")
                    espBox.Adornee = char:FindFirstChild("HumanoidRootPart")
                    espBox.AlwaysOnTop = true
                    espBox.ZIndex = 5
                    espBox.Size = Vector3.new(4, 6, 4)
                    espBox.Transparency = 0.5
                    espBox.Color3 = Color3.fromRGB(255, 0, 0)
                    espBox.Parent = char
                    plr.CharacterAdded:Connect(function()
                        espBox:Destroy()
                    end)
                end
            end
        end
    else
        for _, plr in pairs(game:GetService("Players"):GetPlayers()) do
            if plr ~= game:GetService("Players").LocalPlayer then
                for _, child in pairs(plr.Character:GetChildren()) do
                    if child:IsA("BoxHandleAdornment") then
                        child:Destroy()
                    end
                end
            end
        end
    end
end)

-- Aimbot Toggle
local aimbotToggle = Instance.new("TextButton", UI_Lib["MainFrame"])
aimbotToggle.Text = "Aimbot: OFF"
aimbotToggle.Size = UDim2.new(0, 200, 0, 40)
aimbotToggle.Position = UDim2.new(0.5, -100, 0, 120)
aimbotToggle.Font = Enum.Font.Gotham
aimbotToggle.TextSize = 18
aimbotToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotToggle.BackgroundColor3 = Color3.fromRGB(30, 28, 40)
local aimbotToggleCorner = Instance.new("UICorner", aimbotToggle)
aimbotToggleCorner.CornerRadius = UDim.new(0, 10)

local aimbotEnabled = false

aimbotToggle.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    aimbotToggle.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
end)

-- Noclip Toggle
local noclipToggle = Instance.new("TextButton", UI_Lib["MainFrame"])
noclipToggle.Text = "Noclip: OFF"
noclipToggle.Size = UDim2.new(0, 200, 0, 40)
noclipToggle.Position = UDim2.new(0.5, -100, 0, 180)
noclipToggle.Font = Enum.Font.Gotham
noclipToggle.TextSize = 18
noclipToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
noclipToggle.BackgroundColor3 = Color3.fromRGB(30, 28, 40)
local noclipToggleCorner = Instance.new("UICorner", noclipToggle)
noclipToggleCorner.CornerRadius = UDim.new(0, 10)

local noclipEnabled = false

noclipToggle.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipToggle.Text = noclipEnabled and "Noclip: ON" or "Noclip: OFF"
end)

-- Aimbot Logic (Targeting only enemies)
game:GetService("RunService").RenderStepped:Connect(function()
    if aimbotEnabled then
        local player = game.Players.LocalPlayer
        local closestEnemy = nil
        local closestDistance = math.huge

        for _, plr in pairs(game.Players:GetPlayers()) do
            if plr ~= player and plr.Team ~= player.Team and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
                local distance = (plr.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEnemy = plr
                end
            end
        end

        if closestEnemy and closestEnemy.Character and closestEnemy.Character:FindFirstChild("HumanoidRootPart") then
            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, closestEnemy.Character.HumanoidRootPart.Position)
        end
    end
end)

-- Noclip Logic (Fixed)
game:GetService("RunService").Heartbeat:Connect(function()
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        -- Disable collision for noclip
        if noclipEnabled then
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics)
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false  -- Disable collision for all parts
                end
            end
        else
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics)
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true  -- Re-enable collision for all parts
                end
            end
        end
    end
end)

-- Dragging UI
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    UI_Lib["MainFrame"].Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

UI_Lib["MainFrame"].InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = UI_Lib["MainFrame"].Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UI_Lib["MainFrame"].InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)